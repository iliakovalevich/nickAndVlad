{"version":3,"sources":["calculator/Button.js","calculator/WorkArea.js","reportWebVitals.js","index.js","calculator/Main.js"],"names":["props","style","fontSize","display","boxSizing","border","borderColor","onClick","clickHandler","width","height","margin","justifyContent","alignItems","backgroundColor","color","fontFamily","outline","value","text","WorkArea","state","content","toFocus","event","document","getElementById","setSelectionRange","length","focus","focusing","render","id","textAlign","paddingTop","onfocusin","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Main","newContent","target","changeMark","RegExp","values","Array","from","matchAll","toChange","console","log","indexOf","newPart","substr","replace","replaceAll","reg","evalPercent","String","eval","err","match","setState","arr","input","options","i","exec","toEv","index","isOptions","toPercentage","percent","Number","marginLeft","marginTop","background","this","padding"],"mappings":"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","file":"static/js/main.34be78c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div style={\r\n            {\r\n                fontSize:30,\r\n                display: \"inline-block\",\r\n                boxSizing: \"border-box\",\r\n                border: '1px solid',\r\n                borderColor: 'rgba(1,1,1,0)'\r\n            }\r\n        } >\r\n            <button onClick={props.clickHandler} style={\r\n                props.style ? props.style :\r\n                {\r\n                    width: 84.5,\r\n                    height: 77,\r\n                    margin: 0.5,\r\n                    display:\"flex\",\r\n                    justifyContent:\"center\",\r\n                    alignItems:\"center\",\r\n                    boxSizing:\"border-box\",\r\n                    backgroundColor: 'rgba(255,255,255,0.2)',\r\n                    border: 'rgba(1,1,1,0)',\r\n                    color: \"white\",\r\n                    fontSize:30,\r\n                    fontFamily:'Coronetscript, cursive',\r\n                    outline:'none'\r\n                }\r\n            } value={props.text}>{props.text}</button>\r\n        </div>\r\n    )\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class WorkArea extends Component {\r\n\r\n    state = {\r\n        text:this.props.content\r\n    }\r\n\r\n    toFocus = () => {\r\n        let event = document.getElementById('workArea')\r\n        event.value = this.props.content;\r\n        if (event.setSelectionRange) {\r\n            event.setSelectionRange(this.props.content.length, this.props.content.length)\r\n        }\r\n        event.focus();\r\n        return this.props.content;\r\n    }\r\n\r\n    focusing = () => {\r\n        let event = document.getElementById('workArea')\r\n        if (event.setSelectionRange) {\r\n            event.setSelectionRange(event.value.length, event.value.length)\r\n        }\r\n        event.focus();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n\r\n            <div>\r\n                <input id='workArea' style={{\r\n                    height: 200\r\n                    ,\r\n                    width: 350\r\n                    ,\r\n                    fontSize: 35\r\n                    ,\r\n                    textAlign: \"right\"\r\n                    ,\r\n                    paddingTop: 110\r\n                    ,\r\n                    backgroundColor: 'rgba(1,1,1,0)'\r\n                    ,\r\n                    border: 0\r\n                    ,\r\n                    boxSizing: \"border-box\"\r\n                    ,\r\n                    color: 'white'\r\n                    ,\r\n                    outline:'none'\r\n                }\r\n                }\r\n                       value=\r\n                           {\r\n                               this.props.content == this.state.text ? this.props.content :\r\n                                   this.toFocus()\r\n                           }\r\n                       onfocusin={this.focusing}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from \"./calculator/Main\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Main />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, {Component} from \"react\";\r\nimport WorkArea from \"./WorkArea\";\r\nimport Button from \"./Button\";\r\n\r\nclass Main extends Component {\r\n\r\n    state = {\r\n        content: \"\"\r\n    }\r\n\r\n    clickHandler = (event) => {\r\n        let newContent = this.state.content;\r\n\r\n\r\n        switch (event.target.value) {\r\n            case \"+/-\":\r\n                if(newContent == '') break;\r\n                let changeMark = new RegExp(/[+\\-x/]?(\\d,?)+/g);\r\n                let values = Array.from(newContent.matchAll(changeMark));\r\n                let toChange = values[values.length - 1][0];\r\n                console.log(toChange);\r\n                if(toChange.indexOf('x') != -1 || toChange.indexOf('/') != -1) {\r\n                    let newPart = toChange.substr(0, 1);\r\n                    newPart += '-';\r\n                    newPart += toChange.substr(1);\r\n                    newContent = newContent.replace(toChange,newPart);\r\n                } else if(toChange.indexOf('+') != -1) {\r\n                    newContent = newContent.replace(toChange, toChange.replace('+','-'));\r\n                } else if(toChange.indexOf('-') != -1) {\r\n                    newContent = newContent.replace(toChange, toChange.replace('-','+'));\r\n                } else {\r\n                    newContent = newContent.replace(toChange, '-' + toChange);\r\n                }\r\n                break;\r\n            case \"C\":\r\n                newContent = '';\r\n                break;\r\n            case \"=\":\r\n                if(newContent == '')\r\n                    break;\r\n                newContent = newContent.replaceAll(\"x\", '*');\r\n                newContent = newContent.replaceAll(\",\", '.');\r\n                if(newContent.substr(0,1) == '0')\r\n                    newContent = newContent.replace('0', '');\r\n                let reg = new RegExp(/\\d*%/g);\r\n                newContent = this.evalPercent(Array.from(newContent.matchAll(reg)), newContent);\r\n                try {\r\n                    newContent = String(eval(newContent));\r\n                } catch (err) {\r\n                    newContent = '';\r\n                }\r\n                break;\r\n            case ',':\r\n                if(newContent == '' ||\r\n                    newContent.substr(newContent.length - 1).match(/[,+\\-x/]/g) != null\r\n                || (newContent + ',').match(/(\\d+,\\d+),/g) != null)\r\n                    break;\r\n                newContent += event.target.value;\r\n                break;\r\n            case '+':\r\n            case '-':\r\n            case 'x':\r\n            case '/':\r\n                if(newContent == '' ||\r\n                    newContent.substr(newContent.length - 1).match(/[,+\\-x/]/g) != null)\r\n                    break;\r\n                newContent += event.target.value;\r\n                break;\r\n            case '%':\r\n                if(newContent == '' ||\r\n                    newContent.substr(newContent.length - 1).match(/[,+\\-x/%]/g) != null)\r\n                    break;\r\n                newContent += event.target.value;\r\n                break;\r\n            default:\r\n                if(newContent.substr(newContent.length - 1).match(/%/g) == null)\r\n                newContent += event.target.value;\r\n        }\r\n\r\n        this.setState({\r\n                content: newContent\r\n            }\r\n        )\r\n    }\r\n\r\n    evalPercent(arr, input) {\r\n        if(arr.length == 0) return input;\r\n        let reg = new RegExp(/[\\d.,]*%/g);\r\n        let options = new RegExp(/[+\\-*/]/g);\r\n        for(let i = 0; i < arr.length; i++) {\r\n            let match = reg.exec(input);\r\n            let toEv = input.substr(0, match.index);\r\n            let isOptions = options.exec(toEv);\r\n            toEv = toEv.substr(0, toEv.length - 1);\r\n            if(isOptions == null) {\r\n                input = input.replace(match, '0');\r\n            } else {\r\n                let toPercentage = eval(toEv.replace(',','.'));\r\n                let percent = Number(match[0].replace('%', ''));\r\n                input = input.replace(match[0], String(toPercentage * (percent / 100)));\r\n            }\r\n            console.log(\"input: \", input, '   toEv: ', toEv);\r\n        }\r\n        return input;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={\r\n                {\r\n                    width: 350,\r\n                    height: 600,\r\n                    marginLeft: 600,\r\n                    marginTop: 100,\r\n                    border: 0,\r\n                    background: 'linear-gradient(to bottom right, #ffbc00 30%, #fe006d 115%)'\r\n                }\r\n            }>\r\n                <WorkArea content={this.state.content}/>\r\n                <div style={{display: \"block\"}}>\r\n                    <Button text={\"C\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"+/-\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"%\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"/\"} clickHandler={this.clickHandler}/>\r\n                </div>\r\n                <div style={{height: 79}}>\r\n                    <Button text={\"7\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"8\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"9\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"x\"} clickHandler={this.clickHandler}/>\r\n                </div>\r\n                <div style={{height: 79}}>\r\n                    <Button text={\"4\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"5\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"6\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"-\"} clickHandler={this.clickHandler}/>\r\n                </div>\r\n                <div style={{height: 79}}>\r\n                    <Button text={\"1\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"2\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"3\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"+\"} clickHandler={this.clickHandler}/>\r\n                </div>\r\n                <div style={{height: 79}}>\r\n                    <Button style={{\r\n                        width:172,\r\n                        height: 77,\r\n                        display:\"flex\",\r\n                        justifyContent:\"left\",\r\n                        padding: 20,\r\n                        alignItems:\"center\",\r\n                        textAlign: 'left',\r\n                        boxSizing:\"border-box\",\r\n                        backgroundColor: 'rgba(255,255,255,0.2)',\r\n                        border: 'rgba(1,1,1,0)',\r\n                        color: \"white\",\r\n                        fontSize:30,\r\n                        fontFamily:'Coronetscript, cursive',\r\n                        outline:'none'\r\n                    }} text={\"0\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\",\"} clickHandler={this.clickHandler}/>\r\n                    <Button text={\"=\"} clickHandler={this.clickHandler}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main"],"sourceRoot":""}